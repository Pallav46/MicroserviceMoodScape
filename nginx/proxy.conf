events {}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    upstream auth_service {
        server auth-server:5000;
    }

    upstream emotion_detection_service {
        server emotion-server:8000;
    }

    server {
        listen 80;

        # Route for auth service
        location ^~ /login {
            proxy_pass http://auth_service/login;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ^~ /detect-emotion {
            auth_request /auth-verify;
            proxy_pass http://emotion_detection_service/detect-emotion;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Forward the Authorization header correctly
            proxy_set_header Authorization $http_authorization;
            
            error_page 401 = @error401;
            error_page 400 = @error400;
        }

        location /auth-verify {
            internal;
            proxy_pass http://auth_service/verify;
            proxy_set_header Authorization $http_authorization;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_pass_request_body off;
        }

        location @error401 {
            return 401 "Unauthorized: Access is denied due to invalid credentials.";    
        }
        
        location @error400 {
            return 400 "Bad Request: Invalid token format.";    
        }
    }
}