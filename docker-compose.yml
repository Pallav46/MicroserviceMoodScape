services:
  auth-server:
    container_name: auth_service
    build:
      context: ./auth
    volumes:
      - ./auth:/app
    expose:
      - "8080"
    ports:
      - "8080:8080"
    networks:
      - internal_network
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: auth_database
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      CLERK_PUBLISHABLE_KEY: ${CLERK_PUBLISHABLE_KEY}
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
    depends_on:
      - postgres

  emotion-server:
    container_name: emotion_detection_service
    build:
      context: ./emotion-detection
    volumes:
      - ./emotion-detection:/app
    expose:
      - "8000"
    ports:
      - "8000:8000"
    networks:
      - internal_network

  user-server:
    container_name: user_service
    build:
      context: ./user
    volumes:
      - ./user:/app
    expose:
      - "8050"
    ports:
      - "8050:8050"
    networks:
      - internal_network
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: user_database
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - postgres

  song-server:
    container_name: song_service
    build:
      context: ./song
    volumes:
      - ./song:/app
    expose:
      - "8010"
    ports:
      - "8010:8010"
    networks:
      - internal_network

  nginx-proxy:
    image: nginx:1.21.6   # Use a specific, stable version
    container_name: nginx_proxy
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/nginx.conf:ro   # Mount config as read-only
      - ./logs:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - internal_network
    depends_on:
      - auth-server
      - emotion-server
      - song-server

  postgres:
    image: postgres:14
    container_name: postgres_database
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh:ro
    networks:
      - internal_network
    ports:
      - "5432:5432"

networks:
  internal_network:
    driver: bridge

volumes:
  postgres_data:
